apiVersion: tf.upbound.io/v1beta1
kind: Workspace
metadata:
  name: {{ .Values.cluster.name }}-flow
  namespace: {{ .Values.cluster.name }}
  annotations:
    meta.upbound.io/example-id: tf/v1beta1/workspace
spec:
  forProvider:
    source: Inline
    module: |
      data "nutanix_clusters" "clusters" {}

      locals {
        cluster_uuid = [
          for cluster in data.nutanix_clusters.clusters.entities :
          cluster.metadata.uuid if cluster.service_list[0] != "PRISM_CENTRAL"
        ][0]
      }

      //Create category values, Environment key already exists.

      data "nutanix_category_key" "environment_key" {
        name = "Environment"
      }
      resource "nutanix_category_value" "{{ .Values.cluster.name }}-k8s-cluster" {
        name        = "${data.nutanix_category_key.environment_key.id}"
        description = "{{ .Values.cluster.name }} generated by GitOps/Crossplane"
        value       = "{{ .Values.cluster.name }}"
      }

      //Create category values, AppTier key already exists.

      data "nutanix_category_key" "apptier_key" {
        name = "AppTier"
      }
      resource "nutanix_category_value" "{{ .Values.cluster.name }}-apptier-cp" {
        name        = "${data.nutanix_category_key.apptier_key.id}"
        description = "ControlPlane generated by GitOps/Crossplane"
        value       = "ControlPlane"
      }     

      resource "nutanix_category_value" "{{ .Values.cluster.name }}-apptier-w" {
        name        = "${data.nutanix_category_key.apptier_key.id}"
        description = "Worker generated by GitOps/Crossplane"
        value       = "Worker"
      }   


      //Create Security Policy
      resource "nutanix_network_security_rule" "{{ .Values.cluster.name }}-isolation" {
          name        = "{{ .Values.cluster.name }}-isolation-rule"
          description = "{{ .Values.cluster.name }}-isolation-rule"

          isolation_rule_action = "MONITOR"

          isolation_rule_first_entity_filter_kind_list = ["vm"]
          isolation_rule_first_entity_filter_type      = "CATEGORIES_MATCH_ALL"
          isolation_rule_first_entity_filter_params {
              name   = "Environment"
              values = ["{{ .Values.cluster.name }}"]
          }

          isolation_rule_second_entity_filter_kind_list = ["vm"]
          isolation_rule_second_entity_filter_type      = "CATEGORIES_MATCH_ALL"
          isolation_rule_second_entity_filter_params {
              name   = "Environment"
              values = ["Production"]
          }
      }
  providerConfigRef:
    name: {{ .Values.cluster.name }}-flow-providerconfig
  writeConnectionSecretToRef:
    namespace:  {{ .Values.cluster.name }}
    name: connection-nutanix-flow-{{ .Values.cluster.name }}